namespace WeRock.Share;

attribute "fs_serializer";

enum Currency : byte {
    NONE = 0,
    AED,
    AUD,
    BRL,
    CAD,
    CHF,
    CLP,
    CNH,
    CNY,
    COP,
    CZK,
    DKK,
    EGP,
    EUR,
    GBP,
    GBp,
    HKD,
    HUF,
    IDR,
    ILS,
    ILa,
    INR,
    JPY,
    KRW,
    KWD,
    KWf,
    MXN,
    MYR,
    NOK,
    NZD,
    PHP,
    PLN,
    QAR,
    RUB,
    SAR,
    SEK,
    SGD,
    THB,
    TRY,
    TWD,
    USD,
    ZAR,
    ZAc
}

enum Market : byte {
    Global = 0,
    CN,
    US,
    AU,
    HK,
    JP,
    EU,
    KR
}

enum SecurityType : byte {
    All = 0,
    Index,
    Stock,
    ETF,
    Futures
}

enum Side : byte {
    Buy,
    Sell
}

enum OrderType : byte {
    Limit = 0,
    Market
}

enum PositionEffect : byte {
    Open = 0,
    Close,
    CloseToday,
    CloseYesterday,

    Auto,
    NotCloseToday,
    CloseTodayFirst
}

enum TimeInForce : byte {
    Day = 0,
    IOC,
    KOK
}

enum OrderMessageType : byte {
    New,
    NewAccept,
    NewReject,
    Cancel,
    Cancelled,
    CancelReject,
    Reject,
    Amend,
    AmendAccept,
    AmendReject,
    Fill,
    Filled,
    Closed,
}

enum OrderStatus: byte {
   Unknown = 0,
   New,
   Rejected,
   Open,
   PartiallyFilled,
   Filled,
   Cancelled,
   Closed
 }

enum TradingStatus : byte {
    Unknown = 0,
    PreOpenAuction,
    PreOpenClosingAuction,
    Open,
    PreCloseAuction,
    PreCloseClosingAuction,
    Close,
    Halt
}

enum TradeType : byte {
    Market = 0,
    Booking = 1
}

enum ConnectionState : byte {
    Unknown = 0,
    Connecting,
    Connected,
    Disconnected,
    Timeout,
    Error
}

enum EvaluationMode : byte {
    Default = 0,
    Imbalance = 1,
    MidPrice,
    BidOffer
}

enum StrategyType: byte {
    All = 0,
    Manual = 1,
    DeltaOne,
    DeltaHedger,
}

enum StrategyState : byte {
    Initializing = 0,
    RiskWaiting,
    StartWaiting,
    Started,
    Stopping,
    Stopped,
    Risk,
    Terminated
}

enum StrategyMode : byte {
    MarketMaking,
    Risk
}

enum StrategyActionType : byte {
    None = 0,
    Start,
    Stop,
    PutOnRisk,
    Terminate,
    ActivateSentiment,
    UpdateParameters,
    PublishDtos,
    RefreshPositions,
}

enum TaskStatus : byte {
    Unknkown = 0,
    Running,
    Success,
    Failed,
}

enum BasketType : byte {
    Custom = 0,
    Creation,
    Redemption,
    Tracking
}

enum ReferencePriceType: byte {
    PnlDailyMarkPrice,
    USCashClose,
    CNCashClose,
    HKCashClose,
    JPCashClose,
    AUCashClose
}

enum EntityEventType: byte {
    Snapshot = 0,
    Added,
    Updated,
    Removed,
    Purged
}

enum PriceInputMode: byte {
    Imbalance = 0,
    BidOffer,
    MidPrice
}

enum TaskRunType: byte {
    Scheduled = 0,
    Manual
}

enum StrategyFlags: int {
    NONE = 0,
    INVALID_PARAMETERS = 1,
    INVALID_PRICING_BASKET = 2,
    INVALID_HEDGING_BASKET = 4,
}

enum QuotingInstructionType: byte {
    NEW = 0,
    REPLACE = 1,
    CANCEL = 2,
}


enum AlertSeverity : byte {
    INFO = 0,
    WARNING,
    CRITICAL,
}

enum AlertClassification: byte {
    UNKNOWN = 0,
    SYSTEM,
    STRATEGY,
    MARKET,
    ORDER,
    RISK,
    CONNECTION,
    DATA,
    ACCOUNT,
    INSTRUMENT,
    BASKET,
    TASK
}

enum RiskRuleType: byte {
    None = 0,
    MaxOrderValue = 1,
    MessageRate = 2,
    Covot = 3,
    HardReject = 4,
    MaxOpenOrder = 5,
    PriceTolerance = 6,
    ConsecutiveReject = 7,
    PropCross = 8,
    PortfolioLimit = 9,
    GlobalHardReject = 10,
}

enum RejectLevel: byte {
    None = 0,
    Benign,
    Known,
    Critical,
    Fatal, 
}

enum BasketPricingMethod: byte {
    Default = 0, // Default is vanilla pricing
    NSP
}

enum NodeCommandType : byte {
    IDLE = 0,
    UPDATE_NODE_SETTINGS,
    CREATE_STRATEGY,
    START_STRATEGIES,
    STOP_STRATEGIES,
    ENABLE_STRATEGY_DEBUG,
    DISABLE_STRATEGY_DEBUG,
    TERMINATE_STRATEGY,
    REINITIALIZE_STRATEGY,
    DUMP_STRATEGY,
    SET_STRATEGY_NAME,
    SET_STRATEGY_SCHEDULES,
    SET_STRATEGY_PARAMETERS,
    PUT_STRATEGIES_ON_RISK,
    BOOK_TRADE,
    NEW_ORDER,
    REPLACE_ORDER,
    CANCEL_ORDER,    
    TERMINATE_ORDER,
    SUBSCRIBE_MARKET_DATA,
    PUBLISH_GATEWAY_STATE,
    CREATE_MANUAL_TRADE,
    PUBLISH_FULL_STATE,
}

enum TacticType : byte {
    Manual = 0,
    Maker = 1,
    Taker = 2,
    Sniper = 3,
    Dimer = 4,
}

enum PricingCheckType : byte {
    None,
    MaxBid,
    MinAsk,
    BidMaxChg,
    AskMaxChg
    
}

enum BreachingType: byte {
    None = 0,
    Soft = 1,
    Hard = 2
}

enum PositionSource: byte {
    Strategy = 0,
    Consolidated = 1,
    ConsolidatedExcludeManual = 2
}

enum BasketValidationResult: byte {
    Success = 0,
    Invalid = 1,
    Accepted = 2
}

enum IntradayHedgingMethod: byte {
    Disabled = 0,
    BetaModel,
    Basket,
}

enum PriceSource: byte {
    Market = 0,
    Synthetic = 1,
}

enum StrategyComponentType: byte {
    Unknown = 0,
    Parameter,
    MarketData,
    Margin,
    Tactic,
    Position,
    Pricing,
    Hedging,
    Quoting,
    Ordering,
}

enum HealthStatus: byte {
    None = 0,
    Green,
    Yellow,
    Red
}

enum DataType : byte {
    Unknown = 0,
    Double,
    Long,
    String,
}

enum StrategyDataCounterId : uint16 {
    None = 0,
    State,
    
    ParameterStatus,
    ParameterDescription,
    MarketDataStatus,
    MarketDataDescription,
    MarginStatus,
    MarginDescription,
    TacticStatus,
    TacticDescription,
    PositionStatus,
    PositionDescription,
    PricingStatus,
    PricingDescription,
    HedgingStatus,
    HedgingDescription,
    QuotingStatus,
    QuotingDescription,
    OrderingStatus,
    OrderingDescription,
    
    PrimaryPosition,
    PrimaryNotional,
    ConsolidatedPosition,
    PositionExcludeManual,
    Delta,
    ExposurePosition,
    ExposureNotional,
        
    BidNav,
    AskNav,
    
    Gearing,
            
    BidMarginBps,
    AskMarginBps,
    
    OurBidRawPrice,
    OurAskRawPrice,
    
    MakerBestBidPrice,
    MakerBestAskPrice,
    
    MakerBestBidSize,
    MakerBestAskSize,
}

enum OrderMessageSource : uint8 {
    DataHub = 0,
    Strategy,
    System,
    RiskEngine,
    Gateway,
    Exchange
}

enum Role : uint8 {
    None = 0,
    Trader,
    Support,
    MiddleOffice,
}

enum Entitlement: uint16 {
    None = 0,
    Connect = 1,
}

enum NodeType : byte {
    Unknown = 0,
    AeronMediaDriver,
    DataHub,
    Gateway,
    MarketDataCast,
    Trading,
    TradingClient,
    DataForge,
}

enum PlatformEventType: byte {
    None = 0,
    DataHubStarting,
    DataHubStarted,
    DataHubStopping,
    DataHubStopped,
}

enum GatewayType: byte {
    Unknown = 0,
    CTP,
    FIX42,
    OES
}

enum FutureProductType : byte {    
    Commodity = 0,
    Crypto,
    Currency,
    Equity,
    EquityIndex,
    FixedInterest,
}

enum Region : byte {
    Global = 0,
    Asia,
    EMEA,
    Americas
}

enum DividendType : byte {
    Cash,
    Stock,
    SpinOff,
    Split,
    Rights,
    CapitalChange,
}


enum PriceType: byte {
    Default,
    OfficialClose,
    SettlementPrice,
    MarkPrice,
    SpotTheo,
    USCashClose,
    CNCashClose,
    HKCashClose,
    JPCashClose,
    AUCashClose
}

enum PnlType: byte {
    Trading = 0,
    Dividend,
    Adjustment,
}

enum ClientRequestType: byte {
    Ping,
    NodeLogin,
    LoadSnapshot,
    CreateTrades,
    CreateStrategy,
    SaveStrategyParameters,
    RunScheduleTask,
}
