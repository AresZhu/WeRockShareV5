namespace WeRock.Share;

attribute "fs_serializer";

enum ThreadingMode : byte {
    SHARED = 0,
    DEDICATED
}

enum Direction : byte {
    UP = 0,
    DOWN = 1,
}

enum ExchangeMic: byte {
    ALL = 0,
    XDCE,
    XZCE,
    XSGE,
    XSHG,
    XSHE
}

enum PublicationType : byte {
    UNKNOWN = 0,
    DATA_HUB,
    DATA_NODE,
    MARKET_DATA,
    MARKET_SUBSCRIPTION,
    ORDER_INSTRUCTION,
    ORDER_MESSAGE,
    INTER_STRATEGY_MESSAGE
}

enum Currency : byte {
    NONE = 0,
    AED,
    AUD,
    BRL,
    CAD,
    CHF,
    CLP,
    CNH,
    CNY,
    COP,
    CZK,
    DKK,
    EGP,
    EUR,
    GBP,
    GBp,
    HKD,
    HUF,
    IDR,
    ILS,
    ILa,
    INR,
    JPY,
    KRW,
    KWD,
    KWf,
    MXN,
    MYR,
    NOK,
    NZD,
    PHP,
    PLN,
    QAR,
    RUB,
    SAR,
    SEK,
    SGD,
    THB,
    TRY,
    TWD,
    USD,
    ZAR,
    ZAc
}

enum Market : byte {
    Global = 0,
    CN,
    US,
    AU,
    HK,
    JP,
    EU,
    KR
}

enum SecurityType : byte {
    ALL = 0,
    CURRENCY_PAIR,
    INDEX,
    STOCK,
    ETF,
    FUTURES,
    CRYPTO_SPOT,
    CRYPTO_FUTURES,
    INDEX_FUTURES,
    STOCK_FUTURES,
    ETF_FUTURES
}

enum Side : byte {
    UNKNOWN = 0,
    BUY,
    SELL
}

enum OrderType : byte {
    UNKNOWN = 0,
    MARKET,
    LIMIT,
    STOP,
    MIDPOINT_PEG
}

enum PositionEffect : byte {
    OPEN = 0,
    CLOSE,
    CLOSE_TODAY,
    CLOSE_YESTERDAY,

    AUTO,
    NOT_CLOSE_TODAY,
    CLOSE_TODAY_FIRST
}

enum TimeInForce : byte {
    DAY = 0,
    IMMEDIATE_OR_CANCEL,
    FILL_OR_KILL
}

enum OrderMessageType : byte {
    UNKNOWN = 0,
    NEW,
    NEW_ACCEPT,
    NEW_REJECT,
    CANCEL,
    CANCELLED,
    CANCEL_REJECT,
    REJECT,
    REPLACE,
    REPLACED,
    REPLACE_REJECT,
    FILL,
    FILLED,
    CLOSED,
}

enum OrderStatus: byte {
   UNKNOWN = 0,
   NEW,
   REJECTED,
   OPEN,
   PARTIALLY_FILLED,
   FILLED,
   CANCELLED,
   CLOSED
 }

enum TradingStatus : byte {
    UNKNOWN = 0,
    PRE_OPEN_AUCTION,
    PRE_OPEN_CLOSING_AUCTION,
    OPEN,
    PRE_CLOSE_AUCTION,
    PRE_CLOSE_CLOSING_AUCTION,
    CLOSE
}

enum TradeType : byte {
    MARKET = 0,
    BOOKING = 1
}

enum ConnectionState : byte {
    UNKNOWN = 0,
    CONNECTING,
    CONNECTED,
    DISCONNECTED,
    ERROR
}

enum InstrumentResolvingFlags : int {
    SUCCESS = 0,
    FAILED_GET_TICK_SIZE_TABLE = 1,
    FAILED_GET_LOT_SIZE_TABLE = 2
}

enum OrderState : short {
    NONE = 0,
    ACCEPTED = 1,
    PENDING_CANCEL = 2,
    PENDING_REPLACE = 4,
    REPLACED = 8,
    REJECTED = 16,
    CANCELLED = 32,
    PARTIALLY_FILLED = 64,
    FILLED = 128,
    RESERVED1 = 256,
    RESERVED2 = 512,
    TERMINATED = 1024
}

enum InstrumentFlags : int {
    NONE = 0,
    TOPIX_500 = 1
}

enum PricingMode : byte {
    IMBALANCE = 0,
    MID,
    BID_OFFER
}

enum PricerType : byte {
    UNKNOWN = 0,
    FUTURES_IMBALANCE,
    STOCK_IMBALANCE,
    MID,
    BID_OFFER
}

enum GatewayType : byte {
    UNKNOWN = 0,
    SIM,
    CTP,
    FIX42,
    OES,
    GTP,
    BBG,
    TEST,
}

enum StrategyType: byte {
    MANUAL = 0,
    MARKET_MAKING,
    CRYPTO_MARKET_MAKING,
    FUTURES_HEDGING,
    HEDGING,
    TEST
}

enum StrategyState : byte {
    UNKNOWN = 0,
    INITIALIZING,
    WAITING,
    STARTED,
    STOPPING,
    STOPPED,
    RISK,
    TERMINATED
}

enum StrategyActionType : byte {
    UNKNOWN = 0,
    START,
    STOP,
    PUT_ON_RISK,
    REINITIALIZE,
    TERMINATE,
    TERMINATE_ORDERS,
    CANCEL_ORDERS,
}

enum MarginMode : byte {
    AUTO = 0,
    MANUAL = 1
}

enum CorporateActionType: byte {
    UNKNOWN = 0,
}

enum TaskStatus : byte {
    UNKNOWN = 0,
    RUNNING,
    SUCCESS,
    FAILED
}

enum BasketType : byte {
    UNKNOWN = 0,
    CREATION,
    REDEMPTION,
    TRACKING,
    CUSTOM,
}

enum Region: byte {
    GLOBAL,
    ASIA,
    EMEA,
    AMERICAS
}

enum ReferencePriceType: byte {
    PnlDailyMarkPrice,
    USCashClose,
    CNCashClose,
    HKCashClose,
    JPCashClose,
    AUCashClose
}

enum EntityEventType: byte {
    SNAPSHOT = 0,
    ADDED,
    UPDATED,
    REMOVED,
    PURGED
}

enum PriceInputMode: byte {
    IMBALANCE = 0,
    BID_OFFER,
    MID_PRICE
}

enum TaskRunType: byte {
    SCHEDULED = 0,
    MANUAL
}

enum TickSizeType: byte {
    CONST = 0,
    DYNAMIC = 1,
}

enum StrategyFlags: int {
    NONE = 0,
    INVALID_PARAMETERS = 1,
    INVALID_PRICING_BASKET = 2,
    INVALID_HEDGING_BASKET = 4,
}

enum QuotingInstructionType: byte {
    NEW = 0,
    REPLACE = 1,
    CANCEL = 2,
}


enum AlertSeverity : byte {
    INFO = 0,
    WARNING,
    CRITICAL,
}

enum AlertClassification: byte {
    UNKNOWN = 0,
    SYSTEM,
    STRATEGY,
    MARKET,
    ORDER,
    RISK,
    CONNECTION,
    DATA,
    ACCOUNT,
    INSTRUMENT,
    BASKET,
    TASK
}

enum RiskRuleType: byte {
    NONE = 0,
    MaxOrderValue = 1,
    MessageRate = 2,
    Covot = 3,
    HardReject = 4,
    MaxOpenOrder = 5,
    PriceTolerance = 6,
    ConsecutiveReject = 7,
    PropCross = 8,
    PortfolioLimit = 9,
    GlobalHardReject = 10,
}

enum RejectLevel: byte {
    NONE = 0,
    BENIGN,
    KNOWN,
    CRITICAL,
    FATAL    
}

enum BasketPricingMethod: byte {
    DEFAULT = 0,
    MANUAL_NAV,
    NSP,
    MID,
    BID_OFFER
}

enum NodeCommandType : byte {
    IDLE = 0,
    UPDATE_NODE_SETTINGS,
    CREATE_STRATEGY,
    START_STRATEGIES,
    STOP_STRATEGIES,
    ENABLE_STRATEGY_DEBUG,
    DISABLE_STRATEGY_DEBUG,
    TERMINATE_STRATEGY,
    REINITIALIZE_STRATEGY,
    DUMP_STRATEGY,
    SET_STRATEGY_NAME,
    SET_STRATEGY_SCHEDULES,
    SET_STRATEGY_PARAMETERS,
    PUT_STRATEGIES_ON_RISK,
    BOOK_TRADE,
    NEW_ORDER,
    REPLACE_ORDER,
    CANCEL_ORDER,    
    TERMINATE_ORDER,
    SUBSCRIBE_MARKET_DATA,
    PUBLISH_GATEWAY_STATE,
    CREATE_MANUAL_TRADE,
}

enum TacticType : byte {
    Manual = 0,
    Maker = 1,
    Taker = 2,
    Sniper = 3,
    Dimer = 4,
}

enum PricingCheckType : byte {
    None,
    MaxBid,
    MinAsk,
    BidMaxChg,
    AskMaxChg
    
}

enum BreachingType: byte {
    None = 0,
    Soft = 1,
    Hard = 2
}

enum PositionSource: byte {
    Strategy = 0,
    Consolidated = 1,
    ConsolidatedExcludeManual = 2
}

enum BasketValidationResult: byte {
    Success = 0,
    Invalid = 1,
    Accepted = 2
}

enum IntradayHedgingMethod: byte {
    None = 0,
    BetaModel,
    Basket,
}

enum PriceSource: byte {
    Market = 0,
    Synthetic = 1,
}

enum StrategyComponentType: byte {
    Parameter = 0,
    MarketData,
    MarginCalculator,
    Tactic,
    Position,
    Pricing,
    Hedging,
    Quoting,
    Ordering,
}

enum HealthStatus: byte {
    None = 0,
    Green,
    Yellow,
    Red
}

enum DataType : byte {
    Unknown = 0,
    Double,
    Int,
    UInt,
    Long,
    ULong,
    String,
}

enum StrategyDataCounterId : byte {
    None = 0,
    State,
    
    ParameterStatus,
    ParameterDescription,
    MarketDataStatus,
    MarketDataDescription,
    MarginCalculatorStatus,
    MarginCalculatorDescription,
    TacticStatus,
    TacticDescription,
    PositionStatus,
    PositionDescription,
    PricingStatus,
    PricingDescription,
    HedgingStatus,
    HedgingDescription,
    QuotingStatus,
    QuotingDescription,
    OrderingStatus,
    OrderingDescription,
    
    PrimaryPosition,
    PrimaryNotional,
    ConsolidatedPosition,
    PositionExcludeManual,
    
    BidNav,
    AskNav,
    
    BidMarginBps,
    AskMarginBps,
}